<#@ template language="C#" hostSpecific="true" #>
<#@ output extension=".log" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Zirpl.AppEngine.Model" #>
<#@ import namespace="Zirpl.AppEngine.Model.Metadata" #>
<#@ import namespace="Zirpl.AppEngine.CodeGeneration" #>
<#@ import namespace="Zirpl.AppEngine.CodeGeneration.TextTemplating" #>
<#@ import namespace="Zirpl.AppEngine.CodeGeneration.V1" #>
<#@ import namespace="Zirpl.AppEngine.CodeGeneration.V1.ConfigModel" #>
<#@ assembly name="EnvDTE" #>
<#@ assembly name="VSLangProj" #>
<#@ assembly name="VSLangProj80" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Serialization" #>
<#
// Generate Model classes
//
foreach (DomainType domainType in this.Helper.DomainTypesToCustomFieldValueFor)
{
	this.Helper.StartCustomFieldValueFile(domainType);
		
#>
using System;
using System.Collections;
using System.Collections.Generic;
using Zirpl.AppEngine.Model;
using Zirpl.AppEngine.Model.Customization;
using <#= this.Helper.GetModelNamespace(domainType) #>;

namespace <#= this.Helper.GetCustomFieldValueNamespace(domainType) #>
{
    public partial class <#= this.Helper.GetCustomFieldValueTypeName(domainType) #> <#= this.Helper.GetCustomFieldValueBaseDeclaration(domainType) #>
    {
    }
}
<#
}
#>