<#@ template language="C#" hostSpecific="true" #>
<#@ output extension=".log" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Zirpl.AppEngine.CodeGeneration" #>
<#@ import namespace="Zirpl.AppEngine.CodeGeneration.TextTemplating" #>
<#@ import namespace="Zirpl.AppEngine.CodeGeneration.V1" #>
<#@ import namespace="Zirpl.AppEngine.CodeGeneration.V1.ConfigModel" #>
<#@ assembly name="EnvDTE" #>
<#@ assembly name="VSLangProj" #>
<#@ assembly name="VSLangProj80" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Serialization" #>
<#@ assembly name="System.Xml.Serialization" #>
<#
	// Generate DataService classes
	//
	foreach (DomainType domainType in this.Helper.DomainTypesToGenerateDataServiceFor)
	{
		this.Helper.StartDataServiceFile(domainType);
	
#>
using System;
using System.Linq;
using Zirpl.AppEngine.DataService;
using Zirpl.AppEngine.DataService.EntityFramework;
using <#= this.Helper.GetModelNamespace(domainType) #>;

namespace <#= this.Helper.GetDataServiceNamespace(domainType) #>
{
    public partial class <#= this.Helper.GetDataServiceTypeName(domainType) #><#= this.Helper.GetDataServiceBaseDeclaration(domainType) #>
    {
<#
		var defaultSortProperty = (from p in domainType.Properties
									where p.IsDefaultSort
									select p).SingleOrDefault();
		if (defaultSortProperty != null)
		{
#>
		protected override IQueryable<<#= domainType.Name #>> ApplyDefaultSort(IQueryable<<#= this.Helper.GetModelTypeName(domainType) #>> query)
        {
            return from o in query
                   orderby o.<#= defaultSortProperty.Name #>
                   select o;
        }
<#
		}
#>
    }
}
<#
	}
#>