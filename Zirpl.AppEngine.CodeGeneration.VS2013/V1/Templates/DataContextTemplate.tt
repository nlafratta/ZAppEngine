<#@ template language="C#" hostSpecific="true" #>
<#@ output extension=".log" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Zirpl.AppEngine.CodeGeneration" #>
<#@ import namespace="Zirpl.AppEngine.CodeGeneration.TextTemplating" #>
<#@ import namespace="Zirpl.AppEngine.CodeGeneration.V1" #>
<#@ import namespace="Zirpl.AppEngine.CodeGeneration.V1.ConfigModel" #>
<#@ assembly name="EnvDTE" #>
<#@ assembly name="VSLangProj" #>
<#@ assembly name="VSLangProj80" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Serialization" #>
<#@ assembly name="System.Xml.Serialization" #>
<#
	// Generate DataContext class
	//
	this.Helper.StartDataContextFile();
#>
using System;
using System.Data.Entity;
using System.Linq;
using Zirpl.AppEngine.DataService.EntityFramework;

namespace <#= this.Helper.GetDataContextNamespace() #>
{
    public partial class <#= this.Helper.GetDataContextTypeName() #><#= this.Helper.GetDataContextBaseDeclaration() #> 
    {
<#
	foreach (DomainType domainType in this.Helper.DomainTypesToGenerateDataContextPropertyFor)
	{
	
#>
		public DbSet<<#= this.Helper.GetModelTypeFullName(domainType) #>> <#= this.Helper.GetPluralPropertyName(domainType) #> {get; set;}
<#
	}
#>

		protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {		
<#
	foreach (DomainType domainType in this.Helper.DomainTypesToGenerateEntityFrameworkMappingFor)
	{
	
#>			modelBuilder.Configurations.Add(new <#= this.Helper.GetEntityFrameworkMappingTypeFullName(domainType) #>());
<#
	}
#>
			
			this.OnCustomModelCreating(modelBuilder);

            base.OnModelCreating(modelBuilder);
		}

		partial void OnCustomModelCreating(DbModelBuilder modelBuilder);
    }
}
<#


#>