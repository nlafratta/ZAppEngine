<#@ template language="C#" inherits="Zirpl.AppEngine.VisualStudioAutomation.AppGeneration.TextTemplating.OncePerAppTemplate" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Zirpl.AppEngine.VisualStudioAutomation" #>
<#@ import namespace="Zirpl.AppEngine.VisualStudioAutomation.AppGeneration" #>
<#@ import namespace="Zirpl.AppEngine.VisualStudioAutomation.AppGeneration.Config" #>
<#@ import namespace="Zirpl.AppEngine.VisualStudioAutomation.TextTemplating" #>
using System;
using System.Collections.Generic;
using System.Linq;
using Zirpl.AppEngine.Model;
using Zirpl.AppEngine.Model.Extensibility;
using Zirpl.Collections;

namespace <#= App.ModelProject.GetDefaultNamespace() #>
{
	public static partial class ModelExtensions
	{
<#
	foreach (var domainType in this.App.DomainTypes.Where(o => o.IsPersistable && (o.IsUpdatable || o.IsInsertable)))
	{
#>
		public static void Save(this <#= domainType.Name #> entity)
		{
		}
<#	
    }
	foreach (var domainType in this.App.DomainTypes.Where(o => o.IsPersistable && (o.IsDeletable || o.IsMarkDeletable)))
	{
#>
		public static void Delete(this <#= domainType.Name #> entity)
		{
		}
<#	
    }
#>
	}
}