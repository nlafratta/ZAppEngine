<#@ template language="C#" hostSpecific="true" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Zirpl.AppEngine.VisualStudioAutomation" #>
<#@ import namespace="Zirpl.AppEngine.VisualStudioAutomation.TextTemplating" #>
<#@ import namespace="Zirpl.AppEngine.VisualStudioAutomation.AppGeneration" #>
<#@ import namespace="Zirpl.AppEngine.VisualStudioAutomation.AppGeneration.Config" #>
<#@ assembly name="EnvDTE" #>
<#@ assembly name="VSLangProj" #>
<#@ assembly name="VSLangProj80" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Serialization" #>
<#@ parameter type="Zirpl.AppEngine.VisualStudioAutomation.AppGeneration.AppGenerator" name="AppGenerator" #>
<#@ parameter type="Zirpl.AppEngine.VisualStudioAutomation.AppGeneration.Config.App" name="App" #>
<#@ parameter type="Zirpl.AppEngine.VisualStudioAutomation.AppGeneration.Config.DomainType" name="DomainType" #>
<#
	if (this.DomainType.IsEnum)
    {
		this.AppGenerator.StartFile(this, new OutputFile()
                {
                    FileNameWithoutExtension = this.DomainType.Name,
                    FileExtension = ".cs",
                    DestinationProject = this.DomainType.DestinationProject,
                    FolderPathWithinProject = this.App.GetFolderPathFromNamespace(this.DomainType.DestinationProject, this.DomainType.Namespace),
                    BuildAction = BuildActionTypeEnum.Compile
                });
#>
using System;
using System.Collections.Generic;
using System.Linq;
using Zirpl.AppEngine.Model;
using Zirpl.AppEngine.Model.Extensibility;
using Zirpl.Collections;

namespace <#= this.DomainType.Namespace #>
{
	public enum <#= this.DomainType.Name #> : <#= this.DomainType.EnumDescribes.IdProperty.DataTypeString #>
	{
<#
		foreach (var enumValue in this.DomainType.EnumValues)
		{
#>
		<#= enumValue.Name #> = <#= enumValue.Id #>,
<#	
		}
#>
	}
}
<#
    }
#>